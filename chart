import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import mean_squared_error

# Residuals (errors)
train_residuals = y_train - y_train_pred
test_residuals  = y_test - y_test_pred

# RMSE values
rmse_train = np.sqrt(mean_squared_error(y_train, y_train_pred))
rmse_test  = np.sqrt(mean_squared_error(y_test, y_test_pred))

plt.figure(figsize=(8,6))

# Train residuals
plt.scatter(y_train, train_residuals, color="blue", alpha=0.6, label=f"Train (RMSE={rmse_train:.4f})")

# Test residuals
plt.scatter(y_test, test_residuals, color="green", alpha=0.6, label=f"Test (RMSE={rmse_test:.4f})")

# Zero error line
plt.axhline(0, color="red", linestyle="--", linewidth=2)

plt.xlabel("Actual values")
plt.ylabel("Residuals (y - y_pred)")
plt.title("Residual Plot (Error vs Actual)")
plt.legend()
plt.show()


plt.figure(figsize=(8,6))
plt.hist(train_residuals, bins=30, alpha=0.6, color="blue", label="Train residuals")
plt.hist(test_residuals, bins=30, alpha=0.6, color="green", label="Test residuals")
plt.axvline(0, color="red", linestyle="--")
plt.title("Distribution of Residuals")
plt.xlabel("Error (y - y_pred)")
plt.ylabel("Frequency")
plt.legend()
plt.show()